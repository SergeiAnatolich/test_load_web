<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Netology cinema" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SEANCE_ID" elementType="Argument">
            <stringProp name="Argument.name">SEANCE_ID</stringProp>
            <stringProp name="Argument.value">56</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SEANCE_TIME_STAMP" elementType="Argument">
            <stringProp name="Argument.name">SEANCE_TIME_STAMP</stringProp>
            <stringProp name="Argument.value">1667422800</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="RANDOM_ROW" enabled="true">
        <stringProp name="maximumValue">10</stringProp>
        <stringProp name="minimumValue">1</stringProp>
        <stringProp name="outputFormat"></stringProp>
        <boolProp name="perThread">true</boolProp>
        <stringProp name="randomSeed"></stringProp>
        <stringProp name="variableName">RANDOM_ROW</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="RANDOM_PLACE" enabled="true">
        <stringProp name="maximumValue">10</stringProp>
        <stringProp name="minimumValue">1</stringProp>
        <stringProp name="outputFormat"></stringProp>
        <boolProp name="perThread">true</boolProp>
        <stringProp name="randomSeed"></stringProp>
        <stringProp name="variableName">RANDOM_PLACE</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Open_home_page" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">15</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://localhost:8000/" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="RandomTimer.range">0.0</stringProp>
            <stringProp name="ConstantTimer.delay">0</stringProp>
            <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Movie_selection" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://localhost:8000/" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="RandomTimer.range">0.0</stringProp>
            <stringProp name="ConstantTimer.delay">0</stringProp>
            <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://localhost:8000/client/scripts/selectSeance.php" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="seanceId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">seanceId</stringProp>
                <stringProp name="Argument.value">${SEANCE_ID}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="seanceTimeStamp" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">seanceTimeStamp</stringProp>
                <stringProp name="Argument.value">${SEANCE_TIME_STAMP}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">client/scripts/selectSeance.php</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://localhost:8000/client/hall.php" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">client/hall.php</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="RandomTimer.range">5000</stringProp>
            <stringProp name="ConstantTimer.delay">2000</stringProp>
            <stringProp name="TestPlan.comments">Recorded time was 4478 milliseconds</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Booking_a_ticket" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">7</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://localhost:8000/" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="RandomTimer.range">0.0</stringProp>
            <stringProp name="ConstantTimer.delay">0</stringProp>
            <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://localhost:8000/client/scripts/selectSeance.php" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="seanceId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">seanceId</stringProp>
                <stringProp name="Argument.value">${SEANCE_ID}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="seanceTimeStamp" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">seanceTimeStamp</stringProp>
                <stringProp name="Argument.value">${SEANCE_TIME_STAMP}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">client/scripts/selectSeance.php</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://localhost:8000/client/hall.php" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">client/hall.php</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="RandomTimer.range">5000</stringProp>
            <stringProp name="ConstantTimer.delay">2000</stringProp>
            <stringProp name="TestPlan.comments">Recorded time was 4478 milliseconds</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://localhost:8000/client/scripts/reservation.php" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="hallConfiguration" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">hallConfiguration</stringProp>
                <stringProp name="Argument.value">
          &lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart buying-scheme__chair_selected&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__hall-wrapper__save-status&quot;&gt;&lt;/div&gt;        </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="salesPlaces" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">salesPlaces</stringProp>
                <stringProp name="Argument.value">[{&quot;row&quot;:${RANDOM_ROW},&quot;place&quot;:${RANDOM_PLACE},&quot;type&quot;:&quot;standart&quot;}]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">client/scripts/reservation.php</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://localhost:8000/client/payment.php" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">client/payment.php</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="RandomTimer.range">7000</stringProp>
            <stringProp name="ConstantTimer.delay">3000</stringProp>
            <stringProp name="TestPlan.comments">Recorded time was 7475 milliseconds</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="342886003">&lt;h2 class=&quot;ticket__check-title&quot;&gt;Вы выбрали билеты:&lt;/h2&gt;</stringProp>
              <stringProp name="704265647">&quot;ticket__details ticket__chairs&quot;&gt;${RANDOM_ROW}/${RANDOM_PLACE}&lt;/span&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Buying_a_ticket" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">38</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://localhost:8000/" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="RandomTimer.range">0.0</stringProp>
            <stringProp name="ConstantTimer.delay">0</stringProp>
            <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://localhost:8000/client/scripts/selectSeance.php" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="seanceId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">seanceId</stringProp>
                <stringProp name="Argument.value">${SEANCE_ID}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="seanceTimeStamp" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">seanceTimeStamp</stringProp>
                <stringProp name="Argument.value">${SEANCE_TIME_STAMP}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">client/scripts/selectSeance.php</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://localhost:8000/client/hall.php" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">client/hall.php</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="RandomTimer.range">5000</stringProp>
            <stringProp name="ConstantTimer.delay">2000</stringProp>
            <stringProp name="TestPlan.comments">Recorded time was 4478 milliseconds</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://localhost:8000/client/scripts/reservation.php" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="hallConfiguration" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">hallConfiguration</stringProp>
                <stringProp name="Argument.value">
          &lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart buying-scheme__chair_selected&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__row&quot;&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;span class=&quot;buying-scheme__chair buying-scheme__chair_standart&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;buying-scheme__hall-wrapper__save-status&quot;&gt;&lt;/div&gt;        </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="salesPlaces" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">salesPlaces</stringProp>
                <stringProp name="Argument.value">[{&quot;row&quot;:${RANDOM_ROW},&quot;place&quot;:${RANDOM_PLACE},&quot;type&quot;:&quot;standart&quot;}]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">client/scripts/reservation.php</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://localhost:8000/client/payment.php" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">client/payment.php</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="RandomTimer.range">7000</stringProp>
            <stringProp name="ConstantTimer.delay">3000</stringProp>
            <stringProp name="TestPlan.comments">Recorded time was 7475 milliseconds</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="342886003">&lt;h2 class=&quot;ticket__check-title&quot;&gt;Вы выбрали билеты:&lt;/h2&gt;</stringProp>
              <stringProp name="704265647">&quot;ticket__details ticket__chairs&quot;&gt;${RANDOM_ROW}/${RANDOM_PLACE}&lt;/span&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://localhost:8000/client/scripts/sale_save.php" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">client/scripts/sale_save.php</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="RandomTimer.range">5000</stringProp>
            <stringProp name="ConstantTimer.delay">2000</stringProp>
            <stringProp name="TestPlan.comments">Recorded time was 3998 milliseconds</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1414068901">&lt;h2 class=&quot;ticket__check-title&quot;&gt;Электронный билет&lt;/h2&gt;</stringProp>
              <stringProp name="704265647">&quot;ticket__details ticket__chairs&quot;&gt;${RANDOM_ROW}/${RANDOM_PLACE}&lt;/span&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.HitsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Hits per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">100</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseCodesPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Codes per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesPercentilesGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Percentiles" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="InflaxDB Backend Listener" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="influxdbMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbUrl" elementType="Argument">
              <stringProp name="Argument.name">influxdbUrl</stringProp>
              <stringProp name="Argument.value">http://localhost:8086/api/v2/write?org=hlqa&amp;bucket=jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="application" elementType="Argument">
              <stringProp name="Argument.name">application</stringProp>
              <stringProp name="Argument.value">application name</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="measurement" elementType="Argument">
              <stringProp name="Argument.name">measurement</stringProp>
              <stringProp name="Argument.value">jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">.*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">90;95;99</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testTitle" elementType="Argument">
              <stringProp name="Argument.name">testTitle</stringProp>
              <stringProp name="Argument.value">Test name</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventTags" elementType="Argument">
              <stringProp name="Argument.name">eventTags</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbToken" elementType="Argument">
              <stringProp name="Argument.name">influxdbToken</stringProp>
              <stringProp name="Argument.value">gUOFpAnm4Pkor1vp6nw0RrY8pgh2WNtCNx9LZ5Ky1Uqh6zkVVxJAyYibyxgNHE00XavrhsZ0PCok9bMtwy3Jgg==</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersList" elementType="Argument">
              <stringProp name="Argument.name">samplersList</stringProp>
              <stringProp name="Argument.value">metrics</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
